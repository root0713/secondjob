<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="net.bestmember.isjung.rentalfree.dao.ProductMapper">
    <insert id="insertProduct" parameterType="ProductDto">
	    <selectKey keyProperty="prod_seq" resultType="long" order="AFTER">
	        SELECT LAST_INSERT_ID()
	    </selectKey>    

    	INSERT INTO t_product(
			address1
			, address2
			, address3
			, exclusive_area
			, common_area
			, m_exclusive_area
			, m_common_area		
			
			, unusual
			, move_date
			, status
			, prod_type
			, sale_price
			
			, deposit
			, month_price
			, mntnc_includ_yn
			, mntnc_fee
			, mntnc_content
			
			, options
			, prod_content
			, total_floor_cnt
			, floor_cnt
			, parking_cnt
			
			, prod_title
		) VALUES (
			#{address1}
			, #{address2}
			, #{address3}
			, #{exclusive_area}
			, #{common_area}
			, #{m_exclusive_area}
			, #{m_common_area}
			  
			, #{unusual}
			, STR_TO_DATE(#{move_date},'%Y-%m-%d')
			, #{status}
			, #{prod_type}
			, #{sale_price}
			  
			, #{deposit}
			, #{month_price}
			, #{mntnc_includ_yn}
			, #{mntnc_fee}
			, #{mntnc_content}
			  
			, #{options}
			, #{prod_content}
			, #{total_floor_cnt}
			, #{floor_cnt}
			, #{parking_cnt}
			
			, #{prod_title}
		)
    </insert>
    
    <update id="updateProduct" parameterType="ProductDto">
    	UPDATE t_product
    	<set>
    		<if test="address1 != null" >address1 = #{address1}</if>
			<if test="address2 != null" >, address2 = #{address2}</if>
			<if test="address3 != null" >, address3 = #{address3}</if>
			<if test="exclusive_area != null" >, exclusive_area = #{exclusive_area}</if>
			<if test="common_area != null" >, common_area = #{common_area}</if>
			<if test="m_exclusive_area != null" >, m_exclusive_area = #{m_exclusive_area}</if>
			<if test="m_common_area != null" >, m_common_area = #{m_common_area}</if>
			
			<if test="unusual != null" >, unusual = #{unusual}</if>
			<if test="move_date != null" >, move_date = STR_TO_DATE(#{move_date},'%Y-%m-%d')</if>
			<if test="status != null" >, status = #{status}</if>
			<if test="prod_type != null" >, prod_type = #{prod_type}</if>
			<if test="sale_price != null" >, sale_price = #{sale_price}</if>
			
			<if test="deposit != null" >, deposit = #{deposit}</if>
			<if test="month_price != null" >, month_price = #{month_price}</if>
			<if test="mntnc_includ_yn != null" >, mntnc_includ_yn = #{mntnc_includ_yn}</if>
			<if test="mntnc_fee != null" >, mntnc_fee = #{mntnc_fee}</if>
			<if test="mntnc_content != null" >, mntnc_content = #{mntnc_content}</if>
			
			<if test="options != null" >, options = #{options}</if>
			<if test="prod_content != null" >, prod_content = #{prod_content}</if>
			<if test="service_yn != null" >, service_yn = #{service_yn}</if>
			<if test="total_floor_cnt != null" >, total_floor_cnt = #{total_floor_cnt}</if>
			<if test="floor_cnt != null" >, floor_cnt = #{floor_cnt}</if>
			
			<if test="parking_cnt != null" >, parking_cnt = #{parking_cnt}</if>
			<if test="prod_title != null" >, prod_title = #{prod_title}</if>
		</set>
		WHERE 
			prod_seq = #{prod_seq}
    </update>
    
    <delete id="deleteProduct" parameterType="long">
        DELETE FROM t_product WHERE prod_seq = #{prodSeq}
    </delete>
    
    <select id="selectProduct" parameterType="long" resultType="ProductDto">
        SELECT
			*       
        FROM t_product WHERE prod_seq = #{prodSeq}
    </select>
    
    <select id="selectProductList" parameterType="java.util.HashMap" resultType="ProductDto" >
        SELECT * FROM t_product t1
        <where>
        	<if test="!@org.springframework.util.StringUtils@isEmpty(srch_address)">
				AND (t1.address1 LIKE CONCAT('%', #{srch_address}, '%')
				OR t1.address2 LIKE CONCAT('%', #{srch_address}, '%')
				OR t1.address3 LIKE CONCAT('%', #{srch_address}, '%'))
        	</if>
        	<if test="!@org.springframework.util.StringUtils@isEmpty(srch_contrt_name)">
        		<![CDATA[AND (SELECT count(*) FROM t_contract t2 WHERE t2.prod_seq = t1.prod_seq AND t2.contrt_name LIKE CONCAT('%', #{srch_contrt_name}, '%')) > 0]]>
        	</if>
        	<if test="!@org.springframework.util.StringUtils@isEmpty(srch_contrt_tel)">
        		<![CDATA[AND (SELECT count(*) FROM t_contract t2 WHERE t2.prod_seq = t1.prod_seq AND t2.contrt_tel LIKE CONCAT('%', #{srch_contrt_tel}, '%')) > 0]]>
        	</if>
        	<if test="!@org.springframework.util.StringUtils@isEmpty(srch_hist_name)">
        		<![CDATA[AND (SELECT count(*) FROM t_product_history t2 WHERE t2.prod_seq = t1.prod_seq AND t2.hist_name LIKE CONCAT('%', #{srch_hist_name}, '%')) > 0]]>
        	</if>
        	<if test="!@org.springframework.util.StringUtils@isEmpty(srch_service_yn)"> AND t1.service_yn = #{srch_service_yn}</if>
        	<if test="!@org.springframework.util.StringUtils@isEmpty(srch_prod_type)"> AND t1.prod_type = #{srch_prod_type}</if>
        	<if test="!@org.springframework.util.StringUtils@isEmpty(srch_min_area)"> <![CDATA[AND CAST(t1.common_area AS UNSIGNED) >= #{srch_min_area}]]></if>
        	<if test="!@org.springframework.util.StringUtils@isEmpty(srch_max_area)"> <![CDATA[AND CAST(t1.common_area AS UNSIGNED) <= #{srch_max_area}]]></if>
        	<if test="!@org.springframework.util.StringUtils@isEmpty(srch_min_deposit)"> <![CDATA[AND CAST(t1.deposit AS UNSIGNED) >= #{srch_min_deposit}]]></if>
        	<if test="!@org.springframework.util.StringUtils@isEmpty(srch_max_deposit)"> <![CDATA[AND CAST(t1.deposit AS UNSIGNED) <= #{srch_max_deposit}]]></if>
        	<if test="!@org.springframework.util.StringUtils@isEmpty(srch_min_price)"> <![CDATA[AND CAST(t1.month_price AS UNSIGNED) >= #{srch_min_price}]]></if>
        	<if test="!@org.springframework.util.StringUtils@isEmpty(srch_max_price)"> <![CDATA[AND CAST(t1.month_price AS UNSIGNED) <= #{srch_max_price}]]></if>
			<!-- FOR ONLY SERVICE -->
        	<if test="!@org.springframework.util.StringUtils@isEmpty(srch_floor_cnt)">
        		<choose>
        			<when test="srch_floor_cnt == 0"> <![CDATA[AND t1.floor_cnt <= #{srch_floor_cnt}]]> </when>
        			<when test="srch_floor_cnt == 1"> <![CDATA[AND t1.floor_cnt = #{srch_floor_cnt}]]> </when>
        			<when test="srch_floor_cnt == 2"> <![CDATA[AND t1.floor_cnt > #{srch_floor_cnt}]]> </when>
        			<otherwise>
        			</otherwise>
        		</choose>
        	</if>
        	<if test="!@org.springframework.util.StringUtils@isEmpty(srch_parking_cnt)">
        		<choose>
        			<when test="srch_parking_cnt == 1 || srch_parking_cnt == 2"> <![CDATA[AND t1.parking_cnt = #{srch_parking_cnt}]]> </when>
        			<when test="srch_parking_cnt == 3"> <![CDATA[AND t1.parking_cnt > #{srch_parking_cnt}]]> </when>
        			<otherwise>
        			</otherwise>
        		</choose>
        	</if>
        	<if test="!@org.springframework.util.StringUtils@isEmpty(srch_address_first)">
				AND (t1.address1 LIKE CONCAT('%', #{srch_address_first}, '%')
				OR t1.address2 LIKE CONCAT('%', #{srch_address_first}, '%'))
	        	<if test="!@org.springframework.util.StringUtils@isEmpty(srch_address_second)">
					AND (t1.address1 LIKE CONCAT('%', #{srch_address_second}, '%')
					OR t1.address2 LIKE CONCAT('%', #{srch_address_second}, '%'))
	        	</if>  				
        	</if>        	      	
        </where>
        ORDER by prod_seq DESC
        
    </select>
</mapper>